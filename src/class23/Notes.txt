Method Overriding:
     Method overriding allows us to have the same methods in parent and child classes.
Why we should override a method:
     1)When we inherit from a cass everything other than private methods and constructors is inherited
     don't like any method from the parent we can override.
     2)It helps us achieve polymorphism
What is the syntax to override a method:
     1) First there must be a parent child relationship.
     2)In the child class just redefine the method.
Type casting in objects:
     As we can type cast in the primitive data types we can also type cast objects.
     Like storing the object of a child class in a variable of parent type.
Why we should type cast objects?
     With the help of type casting we can start storing the objects of child classes in an array of type parent.
What is the syntax to type cast?
     Its the same as primitive type casting, for example, if we have an animal class and animal class has a child class Cat
     we can do
     Animal animal = new Cat();
     parent name [] arr={new childclasses()}
Polymorphism:
     Polymorphism is the ability of a method to take on  many forms based on the object or the parameters that we pass
     to the method to the method.
Types of polymorphism:
     There are two types of polymorphism.
     1)compile/static/early binding or run time/dynamic or late binding.
     compile time/static/early binding:
        When we use method overloading to achieve polymorphism it is called compile time polymorphism.
     run time/dynamic/or late binding:
        When we use method overriding to achieve polymorphism then it is called run time polymorphism.

Final Keyword:
     Final keyeword is just like any keyword in Java like class, package, and void etc.
     There are three main uses of final keyword.
     1) If we use final keyword with a class no other class can inherit from that class.
     2) If we use it with a methos name no child class can override that method.
     3)If we use it a field once the value has been assigned to that field no one can change it afterwards.
