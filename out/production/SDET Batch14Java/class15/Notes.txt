Why we should exclude packages and class from compiling:
   In Intellij if we have a syntax error in any of the file in any project we cant run
   another file unless we fix that error. Sometimes we want to execute code in some files without
   fixing those issues this is where we exc
   How to exclude packages:
   Double-click the shift button twice quickly and type excludes and hit enter
   from the pop-up window click on the plus button and select the packages that you
   want to exclude
How Java code is compiled/executed on a computer:
   We write the code in files with extension .java
   once we hit the run button a software program called compiler checks this code for errors
   and convert it into byte code. Usually stored in a folder called bin/out.
   JVM another software further converts this code to binary code and this binary code is what is executed
   on your computers
Methods in Java:
   Methods is a block of code. or some java statements  grouped together.
Why we should learn about the methods:
   Methods help us reduce the amount of code that we have to write. Fore example, if a piece of code
   is being repeated, and again we can create a method for it and simple call that method
   whenever we need that logic again.
Syntax of creating a method:
   We can create methods only inside a class.
   [datatype] [method name] [(datatype variableName)] [method body]
   [datatype] Can be void boolean String int etc.
   [method name] They are like variable names
   [(datatype variableName)] used to pass a data type while calling a method
How do we decide that we should use void or a method with a return keyword1
   If we are building a method that will be used by others or in other parts of your code which
   requires some data from your method like an if condition we should not create methods with void
   type.

     String str="hello";
         int length=str.length();
           if(!str.isEmpty()&&length%2!=0&&length>=3) {
               int middleIndex=length/2;
               System.out.println(str.charAt(middleIndex));
           }
-------------------------------------------------------
-------------------------------------------------------
Types of variables with respect to their scope:
    There are three types of variables w.r.t their scope.
     1) Local variables.
     2) Instance variable.
     3) Static variables.
Local variables:
     A variable that is created inside a method loop or switch case or any block of code is called local variable.
When we should use local variables:
     Local variables occupy the computers memory for the shortest amount of time. We should always go with
     local variables if it is possible. but, they are limited in scope we cant use local variables outside
     of block in which they are declared.
     for(int i=0;i<5;i++) {
     System.out.println(i);
     }

Instance variables:
     Which are declared outside a block of code but inside a class are called instance variables.
When we should use instance variables:
     When we are planning to create multiple objects of a class, or we want to share something in multiple
     methods we should go with instance. They occupy the memory for longer as compared to local variables.
Static variables:
     If an instance variable has a keyword static with it, it's called a static variable
 When we should use static variables:
    When we need to share something across the objects. We use static variables,
    but it occupies the memory for longest amount of time.
